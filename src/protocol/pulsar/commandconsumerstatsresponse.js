// source: PulsarApi.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.pulsar.proto.CommandConsumerStatsResponse');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');

goog.forwardDeclare('proto.pulsar.proto.ServerError');
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pulsar.proto.CommandConsumerStatsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.pulsar.proto.CommandConsumerStatsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pulsar.proto.CommandConsumerStatsResponse.displayName = 'proto.pulsar.proto.CommandConsumerStatsResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.pulsar.proto.CommandConsumerStatsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pulsar.proto.CommandConsumerStatsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulsar.proto.CommandConsumerStatsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    errorCode: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    errorMessage: (f = jspb.Message.getField(msg, 3)) == null ? undefined : f,
    msgrateout: (f = jspb.Message.getOptionalFloatingPointField(msg, 4)) == null ? undefined : f,
    msgthroughputout: (f = jspb.Message.getOptionalFloatingPointField(msg, 5)) == null ? undefined : f,
    msgrateredeliver: (f = jspb.Message.getOptionalFloatingPointField(msg, 6)) == null ? undefined : f,
    consumername: (f = jspb.Message.getField(msg, 7)) == null ? undefined : f,
    availablepermits: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f,
    unackedmessages: (f = jspb.Message.getField(msg, 9)) == null ? undefined : f,
    blockedconsumeronunackedmsgs: (f = jspb.Message.getBooleanField(msg, 10)) == null ? undefined : f,
    address: (f = jspb.Message.getField(msg, 11)) == null ? undefined : f,
    connectedsince: (f = jspb.Message.getField(msg, 12)) == null ? undefined : f,
    type: (f = jspb.Message.getField(msg, 13)) == null ? undefined : f,
    msgrateexpired: (f = jspb.Message.getOptionalFloatingPointField(msg, 14)) == null ? undefined : f,
    msgbacklog: (f = jspb.Message.getField(msg, 15)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pulsar.proto.CommandConsumerStatsResponse}
 */
proto.pulsar.proto.CommandConsumerStatsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pulsar.proto.CommandConsumerStatsResponse;
  return proto.pulsar.proto.CommandConsumerStatsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pulsar.proto.CommandConsumerStatsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pulsar.proto.CommandConsumerStatsResponse}
 */
proto.pulsar.proto.CommandConsumerStatsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRequestId(value);
      break;
    case 2:
      var value = /** @type {!proto.pulsar.proto.ServerError} */ (reader.readEnum());
      msg.setErrorCode(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setErrorMessage(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMsgrateout(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMsgthroughputout(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMsgrateredeliver(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setConsumername(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAvailablepermits(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUnackedmessages(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setBlockedconsumeronunackedmsgs(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setConnectedsince(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setMsgrateexpired(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMsgbacklog(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pulsar.proto.CommandConsumerStatsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pulsar.proto.CommandConsumerStatsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulsar.proto.CommandConsumerStatsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {!proto.pulsar.proto.ServerError} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeDouble(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeDouble(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint64(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint64(
      9,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeBool(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeString(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeDouble(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeUint64(
      15,
      f
    );
  }
};


/**
 * required uint64 request_id = 1;
 * @return {number}
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.getRequestId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.pulsar.proto.CommandConsumerStatsResponse} returns this
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.setRequestId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pulsar.proto.CommandConsumerStatsResponse} returns this
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.clearRequestId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.hasRequestId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ServerError error_code = 2;
 * @return {!proto.pulsar.proto.ServerError}
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.getErrorCode = function() {
  return /** @type {!proto.pulsar.proto.ServerError} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.pulsar.proto.ServerError} value
 * @return {!proto.pulsar.proto.CommandConsumerStatsResponse} returns this
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.setErrorCode = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pulsar.proto.CommandConsumerStatsResponse} returns this
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.clearErrorCode = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.hasErrorCode = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string error_message = 3;
 * @return {string}
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.getErrorMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.pulsar.proto.CommandConsumerStatsResponse} returns this
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.setErrorMessage = function(value) {
  return jspb.Message.setField(this, 3, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pulsar.proto.CommandConsumerStatsResponse} returns this
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.clearErrorMessage = function() {
  return jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.hasErrorMessage = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double msgRateOut = 4;
 * @return {number}
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.getMsgrateout = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.pulsar.proto.CommandConsumerStatsResponse} returns this
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.setMsgrateout = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pulsar.proto.CommandConsumerStatsResponse} returns this
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.clearMsgrateout = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.hasMsgrateout = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional double msgThroughputOut = 5;
 * @return {number}
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.getMsgthroughputout = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 5, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.pulsar.proto.CommandConsumerStatsResponse} returns this
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.setMsgthroughputout = function(value) {
  return jspb.Message.setField(this, 5, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pulsar.proto.CommandConsumerStatsResponse} returns this
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.clearMsgthroughputout = function() {
  return jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.hasMsgthroughputout = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional double msgRateRedeliver = 6;
 * @return {number}
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.getMsgrateredeliver = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.pulsar.proto.CommandConsumerStatsResponse} returns this
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.setMsgrateredeliver = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pulsar.proto.CommandConsumerStatsResponse} returns this
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.clearMsgrateredeliver = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.hasMsgrateredeliver = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string consumerName = 7;
 * @return {string}
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.getConsumername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.pulsar.proto.CommandConsumerStatsResponse} returns this
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.setConsumername = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pulsar.proto.CommandConsumerStatsResponse} returns this
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.clearConsumername = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.hasConsumername = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint64 availablePermits = 8;
 * @return {number}
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.getAvailablepermits = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.pulsar.proto.CommandConsumerStatsResponse} returns this
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.setAvailablepermits = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pulsar.proto.CommandConsumerStatsResponse} returns this
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.clearAvailablepermits = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.hasAvailablepermits = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint64 unackedMessages = 9;
 * @return {number}
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.getUnackedmessages = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.pulsar.proto.CommandConsumerStatsResponse} returns this
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.setUnackedmessages = function(value) {
  return jspb.Message.setField(this, 9, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pulsar.proto.CommandConsumerStatsResponse} returns this
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.clearUnackedmessages = function() {
  return jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.hasUnackedmessages = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional bool blockedConsumerOnUnackedMsgs = 10;
 * @return {boolean}
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.getBlockedconsumeronunackedmsgs = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 10, false));
};


/**
 * @param {boolean} value
 * @return {!proto.pulsar.proto.CommandConsumerStatsResponse} returns this
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.setBlockedconsumeronunackedmsgs = function(value) {
  return jspb.Message.setField(this, 10, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pulsar.proto.CommandConsumerStatsResponse} returns this
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.clearBlockedconsumeronunackedmsgs = function() {
  return jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.hasBlockedconsumeronunackedmsgs = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string address = 11;
 * @return {string}
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.pulsar.proto.CommandConsumerStatsResponse} returns this
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.setAddress = function(value) {
  return jspb.Message.setField(this, 11, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pulsar.proto.CommandConsumerStatsResponse} returns this
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.clearAddress = function() {
  return jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.hasAddress = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string connectedSince = 12;
 * @return {string}
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.getConnectedsince = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.pulsar.proto.CommandConsumerStatsResponse} returns this
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.setConnectedsince = function(value) {
  return jspb.Message.setField(this, 12, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pulsar.proto.CommandConsumerStatsResponse} returns this
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.clearConnectedsince = function() {
  return jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.hasConnectedsince = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string type = 13;
 * @return {string}
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/**
 * @param {string} value
 * @return {!proto.pulsar.proto.CommandConsumerStatsResponse} returns this
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.setType = function(value) {
  return jspb.Message.setField(this, 13, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pulsar.proto.CommandConsumerStatsResponse} returns this
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.clearType = function() {
  return jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.hasType = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional double msgRateExpired = 14;
 * @return {number}
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.getMsgrateexpired = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 14, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.pulsar.proto.CommandConsumerStatsResponse} returns this
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.setMsgrateexpired = function(value) {
  return jspb.Message.setField(this, 14, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pulsar.proto.CommandConsumerStatsResponse} returns this
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.clearMsgrateexpired = function() {
  return jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.hasMsgrateexpired = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional uint64 msgBacklog = 15;
 * @return {number}
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.getMsgbacklog = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.pulsar.proto.CommandConsumerStatsResponse} returns this
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.setMsgbacklog = function(value) {
  return jspb.Message.setField(this, 15, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pulsar.proto.CommandConsumerStatsResponse} returns this
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.clearMsgbacklog = function() {
  return jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pulsar.proto.CommandConsumerStatsResponse.prototype.hasMsgbacklog = function() {
  return jspb.Message.getField(this, 15) != null;
};


