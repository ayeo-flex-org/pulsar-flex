// source: PulsarApi.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

goog.provide('proto.pulsar.proto.CommandAck');
goog.provide('proto.pulsar.proto.CommandAck.AckType');
goog.provide('proto.pulsar.proto.CommandAck.ValidationError');

goog.require('jspb.BinaryReader');
goog.require('jspb.BinaryWriter');
goog.require('jspb.Message');
goog.require('proto.pulsar.proto.KeyLongValue');
goog.require('proto.pulsar.proto.MessageIdData');

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.pulsar.proto.CommandAck = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.pulsar.proto.CommandAck.repeatedFields_, null);
};
goog.inherits(proto.pulsar.proto.CommandAck, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.pulsar.proto.CommandAck.displayName = 'proto.pulsar.proto.CommandAck';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.pulsar.proto.CommandAck.repeatedFields_ = [3,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.pulsar.proto.CommandAck.prototype.toObject = function(opt_includeInstance) {
  return proto.pulsar.proto.CommandAck.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.pulsar.proto.CommandAck} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulsar.proto.CommandAck.toObject = function(includeInstance, msg) {
  var f, obj = {
    consumerId: (f = jspb.Message.getField(msg, 1)) == null ? undefined : f,
    ackType: (f = jspb.Message.getField(msg, 2)) == null ? undefined : f,
    messageIdList: jspb.Message.toObjectList(msg.getMessageIdList(),
    proto.pulsar.proto.MessageIdData.toObject, includeInstance),
    validationError: (f = jspb.Message.getField(msg, 4)) == null ? undefined : f,
    propertiesList: jspb.Message.toObjectList(msg.getPropertiesList(),
    proto.pulsar.proto.KeyLongValue.toObject, includeInstance),
    txnidLeastBits: jspb.Message.getFieldWithDefault(msg, 6, 0),
    txnidMostBits: jspb.Message.getFieldWithDefault(msg, 7, 0),
    requestId: (f = jspb.Message.getField(msg, 8)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.pulsar.proto.CommandAck}
 */
proto.pulsar.proto.CommandAck.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.pulsar.proto.CommandAck;
  return proto.pulsar.proto.CommandAck.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.pulsar.proto.CommandAck} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.pulsar.proto.CommandAck}
 */
proto.pulsar.proto.CommandAck.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setConsumerId(value);
      break;
    case 2:
      var value = /** @type {!proto.pulsar.proto.CommandAck.AckType} */ (reader.readEnum());
      msg.setAckType(value);
      break;
    case 3:
      var value = new proto.pulsar.proto.MessageIdData;
      reader.readMessage(value,proto.pulsar.proto.MessageIdData.deserializeBinaryFromReader);
      msg.addMessageId(value);
      break;
    case 4:
      var value = /** @type {!proto.pulsar.proto.CommandAck.ValidationError} */ (reader.readEnum());
      msg.setValidationError(value);
      break;
    case 5:
      var value = new proto.pulsar.proto.KeyLongValue;
      reader.readMessage(value,proto.pulsar.proto.KeyLongValue.deserializeBinaryFromReader);
      msg.addProperties(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTxnidLeastBits(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTxnidMostBits(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRequestId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.pulsar.proto.CommandAck.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.pulsar.proto.CommandAck.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.pulsar.proto.CommandAck} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.pulsar.proto.CommandAck.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {!proto.pulsar.proto.CommandAck.AckType} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getMessageIdList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.pulsar.proto.MessageIdData.serializeBinaryToWriter
    );
  }
  f = /** @type {!proto.pulsar.proto.CommandAck.ValidationError} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getPropertiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.pulsar.proto.KeyLongValue.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint64(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint64(
      8,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.pulsar.proto.CommandAck.AckType = {
  INDIVIDUAL: 0,
  CUMULATIVE: 1
};

/**
 * @enum {number}
 */
proto.pulsar.proto.CommandAck.ValidationError = {
  UNCOMPRESSEDSIZECORRUPTION: 0,
  DECOMPRESSIONERROR: 1,
  CHECKSUMMISMATCH: 2,
  BATCHDESERIALIZEERROR: 3,
  DECRYPTIONERROR: 4
};

/**
 * required uint64 consumer_id = 1;
 * @return {number}
 */
proto.pulsar.proto.CommandAck.prototype.getConsumerId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.pulsar.proto.CommandAck} returns this
 */
proto.pulsar.proto.CommandAck.prototype.setConsumerId = function(value) {
  return jspb.Message.setField(this, 1, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pulsar.proto.CommandAck} returns this
 */
proto.pulsar.proto.CommandAck.prototype.clearConsumerId = function() {
  return jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pulsar.proto.CommandAck.prototype.hasConsumerId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * required AckType ack_type = 2;
 * @return {!proto.pulsar.proto.CommandAck.AckType}
 */
proto.pulsar.proto.CommandAck.prototype.getAckType = function() {
  return /** @type {!proto.pulsar.proto.CommandAck.AckType} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.pulsar.proto.CommandAck.AckType} value
 * @return {!proto.pulsar.proto.CommandAck} returns this
 */
proto.pulsar.proto.CommandAck.prototype.setAckType = function(value) {
  return jspb.Message.setField(this, 2, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pulsar.proto.CommandAck} returns this
 */
proto.pulsar.proto.CommandAck.prototype.clearAckType = function() {
  return jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pulsar.proto.CommandAck.prototype.hasAckType = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated MessageIdData message_id = 3;
 * @return {!Array<!proto.pulsar.proto.MessageIdData>}
 */
proto.pulsar.proto.CommandAck.prototype.getMessageIdList = function() {
  return /** @type{!Array<!proto.pulsar.proto.MessageIdData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pulsar.proto.MessageIdData, 3));
};


/**
 * @param {!Array<!proto.pulsar.proto.MessageIdData>} value
 * @return {!proto.pulsar.proto.CommandAck} returns this
*/
proto.pulsar.proto.CommandAck.prototype.setMessageIdList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.pulsar.proto.MessageIdData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pulsar.proto.MessageIdData}
 */
proto.pulsar.proto.CommandAck.prototype.addMessageId = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.pulsar.proto.MessageIdData, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pulsar.proto.CommandAck} returns this
 */
proto.pulsar.proto.CommandAck.prototype.clearMessageIdList = function() {
  return this.setMessageIdList([]);
};


/**
 * optional ValidationError validation_error = 4;
 * @return {!proto.pulsar.proto.CommandAck.ValidationError}
 */
proto.pulsar.proto.CommandAck.prototype.getValidationError = function() {
  return /** @type {!proto.pulsar.proto.CommandAck.ValidationError} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.pulsar.proto.CommandAck.ValidationError} value
 * @return {!proto.pulsar.proto.CommandAck} returns this
 */
proto.pulsar.proto.CommandAck.prototype.setValidationError = function(value) {
  return jspb.Message.setField(this, 4, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pulsar.proto.CommandAck} returns this
 */
proto.pulsar.proto.CommandAck.prototype.clearValidationError = function() {
  return jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pulsar.proto.CommandAck.prototype.hasValidationError = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated KeyLongValue properties = 5;
 * @return {!Array<!proto.pulsar.proto.KeyLongValue>}
 */
proto.pulsar.proto.CommandAck.prototype.getPropertiesList = function() {
  return /** @type{!Array<!proto.pulsar.proto.KeyLongValue>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.pulsar.proto.KeyLongValue, 5));
};


/**
 * @param {!Array<!proto.pulsar.proto.KeyLongValue>} value
 * @return {!proto.pulsar.proto.CommandAck} returns this
*/
proto.pulsar.proto.CommandAck.prototype.setPropertiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.pulsar.proto.KeyLongValue=} opt_value
 * @param {number=} opt_index
 * @return {!proto.pulsar.proto.KeyLongValue}
 */
proto.pulsar.proto.CommandAck.prototype.addProperties = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.pulsar.proto.KeyLongValue, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.pulsar.proto.CommandAck} returns this
 */
proto.pulsar.proto.CommandAck.prototype.clearPropertiesList = function() {
  return this.setPropertiesList([]);
};


/**
 * optional uint64 txnid_least_bits = 6;
 * @return {number}
 */
proto.pulsar.proto.CommandAck.prototype.getTxnidLeastBits = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.pulsar.proto.CommandAck} returns this
 */
proto.pulsar.proto.CommandAck.prototype.setTxnidLeastBits = function(value) {
  return jspb.Message.setField(this, 6, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pulsar.proto.CommandAck} returns this
 */
proto.pulsar.proto.CommandAck.prototype.clearTxnidLeastBits = function() {
  return jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pulsar.proto.CommandAck.prototype.hasTxnidLeastBits = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint64 txnid_most_bits = 7;
 * @return {number}
 */
proto.pulsar.proto.CommandAck.prototype.getTxnidMostBits = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.pulsar.proto.CommandAck} returns this
 */
proto.pulsar.proto.CommandAck.prototype.setTxnidMostBits = function(value) {
  return jspb.Message.setField(this, 7, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pulsar.proto.CommandAck} returns this
 */
proto.pulsar.proto.CommandAck.prototype.clearTxnidMostBits = function() {
  return jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pulsar.proto.CommandAck.prototype.hasTxnidMostBits = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint64 request_id = 8;
 * @return {number}
 */
proto.pulsar.proto.CommandAck.prototype.getRequestId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.pulsar.proto.CommandAck} returns this
 */
proto.pulsar.proto.CommandAck.prototype.setRequestId = function(value) {
  return jspb.Message.setField(this, 8, value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.pulsar.proto.CommandAck} returns this
 */
proto.pulsar.proto.CommandAck.prototype.clearRequestId = function() {
  return jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.pulsar.proto.CommandAck.prototype.hasRequestId = function() {
  return jspb.Message.getField(this, 8) != null;
};


